{
  "openapi": "3.0.0",
  "info": {
    "description": "Aergia Server API Specification",
    "version": "0.1.0",
    "title": "Aergia API",
    "license": {
      "name": "GNU Affero General Public License v3.0.",
      "url": "https://choosealicense.com/licenses/agpl-3.0/"
    }
  },
  "servers": [
    {
      "url": "/"
    }
  ],
  "paths": {
    "/api/datasets": {
      "get": {
        "description": "retrieve all available datasets currently defined, with corresponding ids.",
        "tags": [
            "Active Learning"
          ],
        "responses": {
          "200": {
            "description": "a list of datasets",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/datasets"
                }
              }
            }
          }
        }
      }
    },
    "/api/{dataset_id}/labels": {
      "get": {
        "description": "retrieve all labels corresponding to a data set.",
        "tags": [
            "Active Learning"
          ],
        "responses": {
          "200": {
            "description": "a list of labels",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/labels"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "dataset_id",
          "in": "path",
          "description": "ID of the dataset to request labels for",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ]
    },
    "/api/{dataset_id}": {
      "get": {
        "tags": [
            "Active Learning"
          ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "parameters": [
        {
          "name": "dataset_id",
          "in": "path",
          "description": "Id of the dataset to request a sample for",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ]
    },
    "/api/sample/{datasample_id}": {
      "post": {
        "description": "send the user labeled data as (datasample_id, label_id, user_id), and receive the next to be labeled data sample (from the same dataset as the one defined by the query).",
        "tags": [
            "Active Learning"
          ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/datasampleObj"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request, malformed reqbody syntax"
          },
          "404": {
            "description": "Resource described in {datasample_id} not found"
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/Association"
        }
      },
      "get": {
        "description": "request a specific data sample by specifying its ID",
        "tags": [
            "Active Learning"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/datasampleObj"
                }
              }
            }
            }
          }
      },
      "parameters": [
        {
          "name": "datasample_id",
          "in": "path",
          "description": "Id of the dataset to request a sample for",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ]
    },
    "/login": {
      "post": {
        "description": "login user by parsing a POST request containing user credentials and issuing a JWT Token",
        "tags": [
            "User"
          ],
        "responses": {
          "200": {
            "description": "OK, Login Successful"
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/UserCredentials"
        }
      }
    },
    "/refresh": {
      "get" : {
        "description": "Refreshes an existing JWT by creating a new one that is a copy of the old except that it has a refrehsed access expiration.",
        "tags": [
            "User"
          ],
          "responses": {
            "200": {
              "description": "OK"
            }
          }
      }
    }

  },
  "components": {
    "schemas": {
      "labels": {
        "type": "object",
        "properties": {
          "labels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/label"
            }
          }
        },
        "example": {
              "labels": [
             {
               "name" : "CAT",
               "id": 21829
             },
             {
               "name" : "DOG",
               "id": 21827
             },
             {
               "name" : "PROGRAMMER",
               "id": 21828
             }
          ]
        }
      },
      "label": {
        "type" : "object",
        "required": [
            "id",
            "name"
          ],
          "properties": {
            "id": {
              "type": "integer",
              "format": "int64"
            },
            "name": {
              "type": "string"
            }
          }
      },
      "datasets": {
        "type": "object",
        "properties": {
          "datasets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/dataset"
            }
          }
        },
          "example": {
            "datasets": [
              {
                "id": 27138,
                "name": "DWTC"
              },
              {
                "id": 45632,
                "name": "CIFAR"
              }
            ]
          }
      },
      "dataset": {
        "type": "object",
        "required": [
            "id",
            "name"
          ],
          "properties": {
            "id": {
              "type": "integer",
              "format": "int64"
            },
            "name": {
              "type": "string"
            }
          }
      },
      "datasampleObj": {
        "type": "object",
        "required": [
            "datasample"
          ],
          "properties": {
            "datasample": {
              "$ref": "#/components/schemas/datasample"
            }
          },
          "example": {
            "datasample": {
                 "id" : 29392,
                 "data" : "<tbody><tr><span> ... </tbody>"
              }
          }
      },
      "datasample": {
        "type": "object",
        "required": [
            "id",
            "data"
          ],
          "properties": {
            "id": {
              "type": "integer",
              "format": "int64"
            },
            "data": {
              "type": "string"
            }
          }
      }
    },
    "requestBodies": {
      "Association": {
        "content": {
          "application/json": {
            "schema": {

            },
            "example": {
              "association" :
                {
                   "label_id": 17248,
                    "user_id": 29488
                }
            }
          }
        }
      },
      "UserCredentials": {
        "content": {
          "application/json": {
            "schema": {

            },
            "example": {
                "username": "vinniboi",
                "password": "likesmeatyumyum"
            }
          }
        }
    }
    }
  }
}